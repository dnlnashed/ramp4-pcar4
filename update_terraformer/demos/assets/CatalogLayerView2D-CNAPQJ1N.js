import{q as r,u as o,C as a,V as m}from"./main-C4ZPumQG.js";import{j as s,y as n}from"./LayerView-D-ullo68.js";import"./preload-helper-ExcqyqRp.js";import"./Container-CY-2-FET.js";import"./MapView-C395ELzJ.js";import"./Cyclical-eCicCMas.js";import"./CollectionFlattener-Bad_hcUG.js";import"./workers-_q2D6x6j.js";import"./projection-8-uxS4CM.js";import"./projectBuffer-C2AmViVa.js";import"./TileInfo-DKAYCVlt.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-DUnn3vh8.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CbVOFvdz.js";import"./signal-C_doicED.js";import"./Map-haMTJoSB.js";import"./Basemap-tUxNVV8f.js";import"./loadAll-uCCJvqur.js";import"./PortalItem-DWC4iI6A.js";import"./writeUtils-BHvBwqoN.js";import"./compilerUtils-C-A03NQB.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CLl-Rp5L.js";import"./common-DQOJ18NT.js";import"./TablesMixin-DtEmo75-.js";import"./Layer-kJz1RbGs.js";import"./TimeExtent-gaoR-i0M.js";import"./GraphicsCollection-DEaTSDfl.js";import"./HeightModelInfo-DKrExp5d.js";import"./ReactiveMap-IiUt4fuK.js";import"./Query-BfP97GzT.js";import"./Field-D4mxNajT.js";import"./fieldType-BGU0IjZn.js";import"./arcgisLayerUrl-BTLOSXmm.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-CpyZBAdc.js";import"./TileKey-BbpgWjHr.js";import"./QueueProcessor-B3IoSQfF.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BMfhrx7f.js";import"./normalizeUtilsCommon-B9uFJkC2.js";import"./utils-DHaZre0y.js";import"./utils-BznvvgVb.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DvNqGkgQ.js";import"./vec32-DV_2yZUR.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BAAfrujk.js";import"./imageUtils-B-FpK2nQ.js";import"./capabilities-A2uoe7dc.js";import"./Version-C4B4w3hN.js";import"./ColorBackground-CumgfYg9.js";import"./parser-C1xXAJ6X.js";import"./layerViewUtils-BA8s-Esd.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
