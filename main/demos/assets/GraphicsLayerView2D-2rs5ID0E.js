import{E as s,b3 as a,V as g,bT as l,aJ as e,q as h,u as n,C as c}from"./main-BvP2mMJi.js";import{j as d,y as u}from"./LayerView-CwJ1y3_o.js";import{t as w}from"./GraphicContainer-DXGZjAH-.js";import{F as y}from"./GraphicsView2D-CRylZ0rc.js";import{e as V}from"./HighlightCounter-Czi-fdpx.js";import"./preload-helper-ExcqyqRp.js";import"./Container-CY5RtaM8.js";import"./MapView-DEd0Q1fe.js";import"./Cyclical-CeQVURVQ.js";import"./CollectionFlattener-BMrovecg.js";import"./workers-Cm5C_BYW.js";import"./projection-96b3oHY5.js";import"./projectBuffer-BwKv3h14.js";import"./TileInfo-BjUnRV6k.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-6Fo0adHJ.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-0E1QIVps.js";import"./signal-BB-xUwNd.js";import"./Map-DkhWdbzs.js";import"./Basemap-BgWAypVr.js";import"./loadAll-FJ0odn1e.js";import"./PortalItem-BydbbX79.js";import"./writeUtils-C2Gh7vKk.js";import"./compilerUtils-DxE-Nek9.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CXjyCzoa.js";import"./common-DQOJ18NT.js";import"./TablesMixin-dVfjydtl.js";import"./Layer-7Fzyz5PT.js";import"./TimeExtent-BPaAkukn.js";import"./GraphicsCollection-Be7b5zcq.js";import"./HeightModelInfo-BgQMOlES.js";import"./ReactiveMap-C0ixbddB.js";import"./Query-DWs7GZ6H.js";import"./Field-Es9rqDok.js";import"./fieldType-CEOeHy7Y.js";import"./arcgisLayerUrl-zirf8jRz.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-CZtp4G4_.js";import"./TileKey-CEzXAy40.js";import"./QueueProcessor-BQS0qOPe.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CZuR4U2F.js";import"./normalizeUtilsCommon-DV3peIvO.js";import"./utils-aU2bE2Ii.js";import"./utils-C4fiXq06.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-B414b4WB.js";import"./vec32-dwN7UxOE.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BZKdBHEN.js";import"./imageUtils-dCc_S-fe.js";import"./capabilities-A2uoe7dc.js";import"./Version-6jGLrZbF.js";import"./ColorBackground-DDP1KIv7.js";import"./parser-DikVt0Fk.js";import"./layerViewUtils-iB_MNcTW.js";import"./AGraphicContainer-ifYOge4N.js";import"./TechniqueInstance-Cy2DMq9M.js";import"./UpdateTracking2D-BgMx8xUn.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-CIptWNVu.js";import"./GeometryUtils-BKvnbWyD.js";import"./enums-CmIX1y88.js";import"./utils-QWndGYJy.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Dewx0MlR.js";import"./Program-C1NmWef6.js";import"./BufferObject-CpXS0eB0.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-C4yWdKVH.js";import"./vec42-CKs01hkn.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-ByeePA1r.js";import"./WGLContainer-Bkw7576q.js";import"./VertexArrayObject-DIyor97G.js";import"./ProgramTemplate-DycQ-vVD.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DtD8mV_D.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-LnC8quQd.js";import"./constants-F8oTIn7N.js";import"./lengthUtils-DgGrtXXQ.js";import"./FieldsIndex-CSxfwv8F.js";import"./UnknownTimeZone-CQpr54yV.js";import"./OverrideHelper-CD6SbuBa.js";import"./colorUtils-C89tEYeu.js";import"./quantizationUtils-BsXHYnBt.js";import"./AttributeStore-Dd7m5j2M.js";import"./TimeOnly-DlrROwhf.js";import"./timeSupport-BvM9ac3Y.js";import"./queryUtils-Mh-LJlJC.js";import"./json-Wa8cmqdu.js";import"./labelUtils-BoPSLnTj.js";import"./diffUtils-nS7AH3FC.js";import"./normalizeUtilsSync-BkAh-Mq4.js";let m=class extends d(u){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=s(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof a?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):g.isCollection(i)&&i.length>0&&(r=i.map(o=>o&&o.uid).toArray());const p=r?.filter(l);return p?.length?(this._addHighlight(p,t),e(()=>this._removeHighlight(p,t))):e()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){const i=[];for(const t of this._highlightCounter.ids()){const r=this._highlightCounter.getHighlightGroups(t),p=this._getHighlightBits(r);i.push({objectId:t,highlightFlags:p})}this.graphicsView?.setHighlight(i)}};h([n()],m.prototype,"graphicsView",void 0),m=h([c("esri.views.2d.layers.GraphicsLayerView2D")],m);const yt=m;export{yt as default};
