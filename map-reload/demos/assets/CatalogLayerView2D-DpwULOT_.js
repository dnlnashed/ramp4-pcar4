import{q as r,u as o,C as a,V as m}from"./main-9YtP5FE3.js";import{j as s,y as n}from"./LayerView-DIWMplJa.js";import"./preload-helper-ExcqyqRp.js";import"./Container-CGnIr2K8.js";import"./MapView-CTBPw5TN.js";import"./Cyclical-CUMIRekj.js";import"./CollectionFlattener-D2juEa_k.js";import"./workers-W8V5s5kc.js";import"./projection-DaCGobfe.js";import"./projectBuffer-Fiv69sO3.js";import"./TileInfo-CSojeLz_.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-lDeSCh76.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CwpLiIAp.js";import"./signal-CdfgSusb.js";import"./Map--WHPLIPq.js";import"./Basemap-De1hEPsO.js";import"./loadAll-DPP_LJhT.js";import"./PortalItem-CLh7n-v2.js";import"./writeUtils-BQ4huUIr.js";import"./compilerUtils-CSEFWOSO.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DReQPB6f.js";import"./common-DQOJ18NT.js";import"./TablesMixin-Cc78QhEJ.js";import"./Layer-_ILr-0Q8.js";import"./TimeExtent-BQe9_hUw.js";import"./GraphicsCollection-D4jcAd5U.js";import"./HeightModelInfo-CAEHDyEM.js";import"./ReactiveMap-DyO-A1xf.js";import"./Query-Do27vu5Q.js";import"./Field-D2AZ6hjx.js";import"./fieldType-Bu7w8dwA.js";import"./arcgisLayerUrl-vRV071yV.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DhYGfrkF.js";import"./TileKey-CMZzMWsF.js";import"./QueueProcessor-vH3V26Um.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-g5tKHpSr.js";import"./normalizeUtilsCommon-B4Aiqv77.js";import"./utils-xdcGOvUY.js";import"./utils-O3wIrGaZ.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CRjLEddc.js";import"./vec32-D1cYxGZh.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-CxQ9zvz2.js";import"./imageUtils-BQ-sFugu.js";import"./capabilities-A2uoe7dc.js";import"./Version-CBOT3rH8.js";import"./ColorBackground-BLt9WDNJ.js";import"./parser-DIYgTQNP.js";import"./layerViewUtils-wHYxX8Y8.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
